version: '3.8'
services:
  pgsql:
    image: 'postgres:14-alpine'
    ports:
      - '${DB_PORT:-5432}:5432'
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-secret}
    volumes:
      - 'dbdata:/var/lib/postgresql/data'
    networks:
      - phpnetwork
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
      retries: 3
      timeout: 5s

  laravel:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    ports:
      - '9000:9000'
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=pgsql
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./app:/var/www/html
    networks:
      - phpnetwork
    depends_on:
      - pgsql

  artisan:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: artisan
    volumes:
      - ./app:/var/www/html
    working_dir: /var/www/html
    user: laravel
    networks:
      - phpnetwork
    depends_on:
      - laravel
    entrypoint: ['php', '/var/www/html/artisan']

  composer:
    build:
      context: .
      dockerfile: ./php/composer/Dockerfile
    container_name: composer
    volumes:
        - ./app:/var/www/html
    working_dir: /var/www/html
    user: laravel
    networks:
        - phpnetwork
    depends_on:
        - laravel
    entrypoint: ['composer', '--ignore-platform-reqs']

  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - '${NGINX_PORT:-80}:80'
    volumes:
      - ./app:/var/www/html:delegated
      - nginxlogs:/var/log/nginx
    networks:
      - phpnetwork
    depends_on:
      - pgsql
      - laravel

networks:
  phpnetwork:
    driver: bridge

volumes:
  dbdata:
    driver: local
  nginxlogs:
    driver: local